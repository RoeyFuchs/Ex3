
@{
    ViewBag.Title = "display";
}

<canvas id="myCanvas"></canvas>

<script>
    var tempx;
    var tempy;
    var width = 180; //defult size of width
    var height = 90; //defult size of height
    //set the width and the height for the all screen
    document.getElementById("myCanvas").style.height = "100vh";
    document.getElementById("myCanvas").style.width = "100vw";

    getData();

    //get the data from the server side
    async function getData() {
        var online = true;
        var c = document.getElementById("myCanvas");
        var ctx = c.getContext("2d");
        //information arrays 
        var arrX = [];
        var arrY = [];
        var y;
        var x;
        while (online) {
            //refresh for new data
            refreshData();
            y = tempy;
            x = tempx;
            //in a case of undefined infromation from the simultaor (error in socket for example)
            if (typeof y == 'undefined' || typeof x == 'undefined') {
                await sleep(@ViewBag.Interval);
                continue;
            }
            //check is the value is nan (we finished)
            if (isNaN(x) || isNaN(y)) {
                online = false;
                continue;
            }
            //push the data to arrays
            arrX.push(x);
            arrY.push(y);
            //call to draw all
            drawAll(ctx, arrX, arrY);
            //wait for interval
            await sleep(@ViewBag.Interval);
         }
            alert('route finished!\nhope you enjoyd to flight with us,\nEl-ILAN')
      }
        
    function drawAll(ctx, x, y) {
            //clean the canvas
            ctx.clearRect(-width, -height, ctx.canvas.width, ctx.canvas.height);
            ctx.beginPath();
            //go to the first point
            ctx.moveTo(x[0], y[0]);
            //draw all points
            for (var i = 1; i < x.length; i++) {
                ctx.lineTo(x[i], y[i]);
            }
            endX = x[x.length - 1];
            endY = y[y.length - 1];
            //draw circule for the current location
            ctx.arc(endX, endY , 1, 0, 2 * Math.PI);
            ctx.stroke();
            ctx.closePath();
    }

    async function refreshData() {
        $.ajax({
            type: "Post",
            url: "/Info/SetValues",
            success: function (txt) {
                parser = new DOMParser();
                xmlDoc = parser.parseFromString(txt, "text/xml");
                tempy = normlizeLat(parseFloat(xmlDoc.getElementsByTagName("Lat")[0].childNodes[0].nodeValue));
                tempx = normlizeLon(parseFloat(xmlDoc.getElementsByTagName("Lon")[0].childNodes[0].nodeValue));
            }

        });
    }

    //nomlize the lon and the lat numbers to the canvas
    function normlizeLon(x) {
        var c = document.getElementById("myCanvas");
        return ((x + width) * c.width / (width*2));
    }
    function normlizeLat(y) {
        var c = document.getElementById("myCanvas");
        return ((y + height) * c.height / (height*2));
    }

    //sleep function
    function sleep(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }

</script>


